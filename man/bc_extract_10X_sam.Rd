% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/function-single_cell_seq.R
\name{bc_extract_10X_sam}
\alias{bc_extract_10X_sam}
\title{Parse 10X Genomic scRNASeq sam file (Experimental)}
\usage{
bc_extract_10X_sam(sam, pattern, cell_barcode_tag = "CR", umi_tag = "UR")
}
\arguments{
\item{sam}{A string, define the un-mapped sequences}

\item{pattern}{A string, define the regular expression to match the barcode
sequence. The barcode sequence should be in the first catch. Please see the
documents of \code{\link[CellBarcode]{bc_extract}} and example for more information.}

\item{cell_barcode_tag}{A string, define the tag of 10X cell barcode field in sam
file. The default is "CR".}

\item{umi_tag}{A string, define the tag of UMI field in the sam file.}
}
\value{
A data.frame with 4 columns:
\enumerate{
  \item \code{cell_barcode}: 10X cellular barcode.
  \item \code{umi}: UMI sequence.
  \item \code{barcode_seq}: lineage barcode.
  \item \code{count}: reads count.
  }
}
\description{
\code{bc_extract_10X_sam} can extract cellular barcode, UMI and lineage barcode
sequences from 10X Genomics scRNASeq sam file. This function can not process
bam file directly, user needs to uncompress the bam file to get sam file in
order to run this function See example.
}
\details{
If the barcode sequence does not map to the reference genome. The user should
use samtools to get the un-mapped reads and save it as sam format for using
as the input. It can save a lot of time. The way to get the un-mapped reads:
\preformatted{
samtools view -f 4 input.bam > output.sam 
}
}
\examples{
## NOT run
# In the case that when the barcode sequence is not mapped to 
# reference genome, it will be much more efficiency to get 
# the un-mapped sequences as the input.

## Get un-mapped reads
# samtools view -f 4 input.bam > scRNASeq_10X.sam 

sam_file <- system.file("extdata", "scRNASeq_10X.sam", package = "CellBarcode")

bc_extract_10X_sam(
  sam = sam_file,
  pattern = "AGATCAG(.*)TGTGGTA",
  cell_barcode_tag = "CR",
  umi_tag = "UR"
)

}
