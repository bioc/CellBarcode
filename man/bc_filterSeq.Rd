% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filtering.R
\name{bc_filterSeq}
\alias{bc_filterSeq}
\alias{bc_filterSeq.ShortReadQ}
\alias{bc_filterSeq.DNAStringSet}
\alias{bc_filterSeq.data.frame}
\alias{bc_filterSeq.character}
\alias{bc_filterSeq.integer}
\alias{bc_filterSeq.list}
\title{Remove low quality sequence}
\usage{
bc_filterSeq(x, ...)

\method{bc_filterSeq}{ShortReadQ}(
  x,
  min_average_quality = 30,
  min_read_length = 0,
  N_threshold = 0,
  ...
)

\method{bc_filterSeq}{DNAStringSet}(x, min_read_length = 0, N_threshold = 0, ...)

\method{bc_filterSeq}{data.frame}(x, min_read_length = 0, N_threshold = 0, ...)

\method{bc_filterSeq}{character}(
  x,
  min_average_quality = 30,
  min_read_length = 0,
  N_threshold = 0,
  sample_name = basename(x),
  ...
)

\method{bc_filterSeq}{integer}(x, min_read_length = 0, N_threshold = 0, ...)

\method{bc_filterSeq}{list}(
  x,
  min_average_quality = 30,
  min_read_length = 0,
  N_threshold = 0,
  sample_name = names(x),
  ...
)
}
\arguments{
\item{x}{A single or a list of Fastq file, \code{ShortReadQ}, \code{DNAStringSet},
\code{data.frame}, integer vector.}

\item{...}{Additional arguments}

\item{min_average_quality}{A numeric or a vector of numeric, specifying the
threshold of the minimum average base quality of a sequence to be kept.}

\item{min_read_length}{A single or a vector of integer, specifying the
sequence length threshold.}

\item{N_threshold}{A integer or a vector of integer, specifying the maximum
\code{N} can be in a sequence.}

\item{sample_name}{A string vector, specifying the sample name in the output.}
}
\value{
A ShortReadQ or DNAStringSet object with sequences passed the
filters.
}
\description{
Remove low quality sequences by base-pair quality, sequence length or unknown
base "N".
}
\examples{
library(ShortRead)

fq_file <- system.file("extdata", "simple.fq", package="CellBarcode")

# apply filter to fastq files
bc_filterSeq(fq_file)

# read in fastq files to get ShortReadQ object
sr <- readFastq(fq_file[1])
# apply sequencing quality filter to ShortReadQ
bc_filterSeq(sr)

# get DNAStringSet object
ds <- sr@sread
# apply sequencing quality filter to DNAStringSet
bc_filterSeq(ds)

###
}
