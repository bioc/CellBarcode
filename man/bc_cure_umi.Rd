% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/correctBarcode.R
\name{bc_cure_umi}
\alias{bc_cure_umi}
\title{Filter on UMI-barcode tags}
\usage{
bc_cure_umi(barcodeObj, depth = 2, doFish = FALSE, isUniqueUMI = FALSE)
}
\arguments{
\item{barcodeObj}{A BarcodeObj}

\item{depth}{A single or a vector of numeric, specifying the UMI-sequence
tags counts threshold. Only the barcode with UMI-barcode larger than the
threshold are considered barcodes.}

\item{doFish}{A single or a vector of bool value, if TRUE, the "fishing"
process will be applied to re-counting the UMI with  barcodes, which are not
satisfied depth threshold.}

\item{isUniqueUMI}{A single or a vector of bool value. In the case that a UMI
relates to several barcodes. If you believe that the UMI is absolute unique,
then only the dominant sequence is chosen for each UMI.}
}
\value{
A BarcodeObj
}
\description{
When the UMI is used and identified by bc_extract, this function applies
the filtering on the UMI-barcode tags.  This function read in data in
messyBc element and create a cleanBc element in BarcodeObj.
}
\details{
When invoke this function, the order of each steps are:
\enumerate{
  \item (optional) Find dominant sequence in each UMI.
  \item UMI-barcode depth filtering.
  \item (optional) Fising the UMI with low UMI-barcode depth.
}
}
\examples{
data(bc_obj)

d1 <- data.frame(
   seq = c(
       "ACTTCGATCGATCGAAAAGATCGATCGATC",
       "AATTCGATCGATCGAAGAGATCGATCGATC",
       "CCTTCGATCGATCGAAGAAGATCGATCGATC",
       "TTTTCGATCGATCGAAAAGATCGATCGATC",
       "AAATCGATCGATCGAAGAGATCGATCGATC",
       "CCCTCGATCGATCGAAGAAGATCGATCGATC",
       "GGGTCGATCGATCGAAAAGATCGATCGATC",
       "GGATCGATCGATCGAAGAGATCGATCGATC",
       "ACTTCGATCGATCGAACAAGATCGATCGATC",
       "GGTTCGATCGATCGACGAGATCGATCGATC",
       "GCGTCCATCGATCGAAGAAGATCGATCGATC"
       ),
   freq = c(
       30, 60, 9, 10, 14, 5, 10, 30, 6, 4 , 6
       )
   )

pattern <- "([ACTG]{3})TCGATCGATCGA([ACTG]+)ATCGATCGATC"
bc_obj <- bc_extract(list(test = d1), pattern, sample_name=c("test"), 
    pattern_type=c(UMI=1, barcode=2))

# Use UMI information to filter the barcode <= 5 UMI-barcode tags
bc_umi_cured <- bc_cure_umi(bc_obj, depth =0, doFish=TRUE, isUniqueUMI=TRUE)
bc_cure_depth(bc_umi_cured, depth = 5)

}
